INVOKE()                                                              INVOKE()



NNAAMMEE
       invoke -

DDEESSCCRRIIPPTTIIOONN
       Invokes a Lambda function. You can invoke a function synchronously (and
       wait for the response), or asynchronously. To invoke a  function  asyn-
       chronously, set IInnvvooccaattiioonnTTyyppee to EEvveenntt .

       For  _s_y_n_c_h_r_o_n_o_u_s  _i_n_v_o_c_a_t_i_o_n , details about the function response, in-
       cluding errors, are included in the response body and headers. For  ei-
       ther  invocation  type,  you can find more information in the _e_x_e_c_u_t_i_o_n
       _l_o_g and _t_r_a_c_e .

       When an error occurs, your function  may  be  invoked  multiple  times.
       Retry  behavior varies by error type, client, event source, and invoca-
       tion type. For example, if you invoke a function asynchronously and  it
       returns  an  error,  Lambda executes the function up to two more times.
       For more information, see _R_e_t_r_y _B_e_h_a_v_i_o_r .

       For _a_s_y_n_c_h_r_o_n_o_u_s _i_n_v_o_c_a_t_i_o_n , Lambda adds  events  to  a  queue  before
       sending  them  to  your function. If your function does not have enough
       capacity to keep up with the queue, events may be  lost.  Occasionally,
       your function may receive the same event multiple times, even if no er-
       ror occurs. To retain events that were not  processed,  configure  your
       function with a _d_e_a_d_-_l_e_t_t_e_r _q_u_e_u_e .

       The  status  code  in the API response doesn't reflect function errors.
       Error codes are reserved for errors that prevent your function from ex-
       ecuting, such as permissions errors, _l_i_m_i_t _e_r_r_o_r_s , or issues with your
       function's  code  and  configuration.  For  example,   Lambda   returns
       TTooooMMaannyyRReeqquueessttssEExxcceeppttiioonn  if  executing the function would cause you to
       exceed a concurrency limit at either the account level (CCoonnccuurrrreennttIInnvvoo--
       ccaattiioonnLLiimmiittEExxcceeeeddeedd  ) or function level (RReesseerrvveeddFFuunnccttiioonnCCoonnccuurrrreennttIInn--
       vvooccaattiioonnLLiimmiittEExxcceeeeddeedd ).

       For functions with a long timeout, your client  might  be  disconnected
       during  synchronous invocation while it waits for a response. Configure
       your HTTP client, SDK, firewall, proxy, or operating  system  to  allow
       for long connections with timeout or keep-alive settings.

       This  operation  requires  permission for the llaammbbddaa::IInnvvookkeeFFuunnccttiioonn ac-
       tion.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SSYYNNOOPPSSIISS
            invoke
          --function-name <value>
          [--invocation-type <value>]
          [--log-type <value>]
          [--client-context <value>]
          [--payload <value>]
          [--qualifier <value>]
          outfile <value>

OOPPTTIIOONNSS
       ----ffuunnccttiioonn--nnaammee (string)
          The name of the Lambda function, version, or alias.
              NNaammee ffoorrmmaattss

          +o FFuunnccttiioonn nnaammee  -  mmyy--ffuunnccttiioonn  (name-only),  mmyy--ffuunnccttiioonn::vv11  (with
            alias).

          +o FFuunnccttiioonn    AARRNN    -   aarrnn::aawwss::llaammbbddaa::uuss--wweesstt--22::112233445566778899001122::ffuunncc--
            ttiioonn::mmyy--ffuunnccttiioonn .

          +o PPaarrttiiaall AARRNN - 112233445566778899001122::ffuunnccttiioonn::mmyy--ffuunnccttiioonn .

          You can append a version number or alias to any of the formats.  The
          length  constraint applies only to the full ARN. If you specify only
          the function name, it is limited to 64 characters in length.

       ----iinnvvooccaattiioonn--ttyyppee (string)
          Choose from the following options.

          +o RReeqquueessttRReessppoonnssee (default) -  Invoke  the  function  synchronously.
            Keep  the connection open until the function returns a response or
            times out. The API response includes the function response and ad-
            ditional data.

          +o EEvveenntt  - Invoke the function asynchronously. Send events that fail
            multiple times to the function's dead-letter queue (if  it's  con-
            figured). The API response only includes a status code.

          +o DDrryyRRuunn  -  Validate  parameter  values and verify that the user or
            role has permission to invoke the function.

          Possible values:

          +o EEvveenntt

          +o RReeqquueessttRReessppoonnssee

          +o DDrryyRRuunn

       ----lloogg--ttyyppee (string)
          Set to TTaaiill to include the execution log in the response.

          Possible values:

          +o NNoonnee

          +o TTaaiill

       ----cclliieenntt--ccoonntteexxtt (string)
          Up to 3583 bytes of base64-encoded data about the invoking client to
          pass to the function in the context object.

       ----ppaayyllooaadd (blob)
          The JSON that you want to provide to your Lambda function as input.

       ----qquuaalliiffiieerr (string)
          Specify  a  version  or  alias  to invoke a published version of the
          function.

       oouuttffiillee (string) Filename where the content will be saved

       See 'aws help' for descriptions of global parameters.

EEXXAAMMPPLLEESS
       EExxaammppllee 11:: TToo iinnvvookkee aa LLaammbbddaa ffuunnccttiioonn ssyynncchhrroonnoouussllyy

       The following iinnvvookkee example  invokes  the  mmyy--ffuunnccttiioonn  function  syn-
       chronously.

          aws lambda invoke \
              --cli-binary-format raw-in-base64-out \
              --function-name my-function \
              --payload '{ "name": "Bob" }' \
              response.json

       Output:

          {
              "ExecutedVersion": "$LATEST",
              "StatusCode": 200
          }

       For  more information, see _S_y_n_c_h_r_o_n_o_u_s _I_n_v_o_c_a_t_i_o_n in the _A_W_S _L_a_m_b_d_a _D_e_-
       _v_e_l_o_p_e_r _G_u_i_d_e.

       EExxaammppllee 22:: TToo iinnvvookkee aa LLaammbbddaa ffuunnccttiioonn aassyynncchhrroonnoouussllyy

       The following iinnvvookkee example invokes  the  mmyy--ffuunnccttiioonn  function  asyn-
       chronously.

          aws lambda invoke \
              --cli-binary-format raw-in-base64-out \
              --function-name my-function \
              --invocation-type Event \
              --payload '{ "name": "Bob" }' \
              response.json

       Output:

          {
              "StatusCode": 202
          }

       For more information, see _A_s_y_n_c_h_r_o_n_o_u_s _I_n_v_o_c_a_t_i_o_n in the _A_W_S _L_a_m_b_d_a _D_e_-
       _v_e_l_o_p_e_r _G_u_i_d_e.

OOUUTTPPUUTT
       StatusCode -> (integer)
          The HTTP status code is in the 200 range for a  successful  request.
          For  the  RReeqquueessttRReessppoonnssee  invocation type, this status code is 200.
          For the EEvveenntt invocation type, this status  code  is  202.  For  the
          DDrryyRRuunn invocation type, the status code is 204.

       FunctionError -> (string)
          If  present, indicates that an error occurred during function execu-
          tion. Details about the error are included in the response payload.

       LogResult -> (string)
          The last 4 KB of the execution log, which is base64 encoded.

       Payload -> (blob)
          The response from the function, or an error object.

       ExecutedVersion -> (string)
          The version of the function that executed. When you invoke  a  func-
          tion  with an alias, this indicates which version the alias resolved
          to.



                                                                      INVOKE()
